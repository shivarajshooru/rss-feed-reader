{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","allsearchName","feedHead","setFeedHead","search","setSearch","feeds","setFeeds","feedName","setFeedName","feedurl","setFeedurl","allFeeds","setAllFeeds","a","fetch","then","res","json","data","console","log","feed","copyItem","items","i","length","url","className","onChange","evt","target","value","serName","placeholder","IconButton","onClick","fontSize","map","item","index","color","feedNameFun","feedurlFun","href","link","pubDate","thumbnail","src","title","description","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b691517c.chunk.js","sourcesContent":["import IconButton from \"@mui/material/IconButton\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport PanoramaFishEyeIcon from \"@mui/icons-material/PanoramaFishEye\";\nimport CancelSharpIcon from \"@mui/icons-material/CancelSharp\";\nimport LaunchIcon from \"@mui/icons-material/Launch\";\n\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [allsearchName, setAllSearchName] = useState([]);\n  const [feedHead, setFeedHead] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [feeds, setFeeds] = useState([]);\n  const [feedName, setFeedName] = useState(\"\");\n  const [feedurl, setFeedurl] = useState(\"\");\n  const [allFeeds, setAllFeeds] = useState([]);\n\n  async function getFeed() {\n    let data = await fetch(\n      `https://api.rss2json.com/v1/api.json?rss_url=${feedurl}&api_key=cmzdmzk7ov9ivx6uk1bvtglrfsundrcrieljdrty`\n    ).then((res) => res.json());\n    console.log(data.feed[\"url\"], \"UUUURRRLL\");\n    let copyItem = [[feedName, data.items, data.feed[\"url\"]], ...allFeeds];\n\n    setAllFeeds(copyItem);\n    setFeeds([feedName, data.items]);\n    setFeedHead(feedName);\n  }\n\n  function serName(evt) {\n    setSearch(evt.target.value);\n  }\n\n  async function searchFun() {\n    for (let i = 0; i < allFeeds.length; i++) {\n      if (allFeeds[i][0] === search) {\n        console.log(allFeeds[i][2]);\n        let url = allFeeds[i][2];\n\n        let data = await fetch(\n          `https://api.rss2json.com/v1/api.json?rss_url=${url}&api_key=cmzdmzk7ov9ivx6uk1bvtglrfsundrcrieljdrty`\n        ).then((res) => res.json());\n\n        let copyItem = [[search, data.items, data.feed[\"url\"]], ...allFeeds];\n\n        setAllFeeds(copyItem);\n\n        setFeedHead(search);\n\n        setFeeds(allFeeds[i]);\n        setFeedName(search);\n        break;\n      }\n    }\n  }\n\n  function feedNameFun(evt) {\n    setFeedName(evt.target.value);\n  }\n\n  function feedurlFun(evt) {\n    setFeedurl(evt.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"main\">\n        <h1 className=\"head\">Content Generator</h1>\n        <input\n          onChange={(evt) => {\n            serName(evt);\n          }}\n          className=\"input\"\n          placeholder=\"Filter your feeds...\"\n        />\n        <IconButton\n          onClick={searchFun}\n          aria-label=\"search\"\n          className=\"searchText\"\n        >\n          <SearchIcon fontSize=\"large\" />\n        </IconButton>\n\n        {allsearchName\n          ? allsearchName.map((item, index) => {\n              return (\n                <div className=\"searchcon\" key={index}>\n                  <div className=\"searchItem\">\n                    <PanoramaFishEyeIcon className=\"ring\" />\n                    <span className=\"itemspan\">{item}</span>\n                  </div>\n                  <CancelSharpIcon className=\"cancel\" color=\"secondary\" />\n                </div>\n              );\n            })\n          : null}\n        <hr />\n        <div className=\"footer\">\n          <p>Add a new feed</p>\n          <input\n            onChange={(evt) => {\n              feedNameFun(evt);\n            }}\n            value={feedName}\n            className=\"finput\"\n            placeholder=\"Type your feed name...\"\n          />\n          <input\n            onChange={(evt) => {\n              feedurlFun(evt);\n            }}\n            value={feedurl}\n            className=\"finput\"\n            placeholder=\"Copy your RSS url..\"\n          />\n          <button onClick={getFeed} className=\"fbutton\">\n            Add feed\n          </button>\n        </div>\n      </div>\n      {feeds.length\n        ? feeds[1].map((item, index) => {\n            return (\n              <div>\n                <div className=\"feedsHead\">\n                  <a href={item.link} target=\"_blank\">\n                    <LaunchIcon className=\"date\" /> {feedHead}\n                  </a>\n                  <span className=\"date\">{item.pubDate}</span>\n                </div>\n                {item.thumbnail ? <img src={item.thumbnail} /> : null}\n                <div className=\"feeds\">\n                  <p className=\"itemTitle\">{item.title}</p>\n                  <p className=\"itemDes\">{item.description}</p>\n                </div>\n              </div>\n            );\n          })\n        : null}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}